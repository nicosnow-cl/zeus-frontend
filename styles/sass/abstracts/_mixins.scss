@use 'breakpoints' as *;
@use 'colors' as *;

@mixin mq($key) {
  $size: map-get($breakpoints, $key);

  @media only screen and (min-width: $size) {
    @content;
  }
}

@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }

  @-moz-keyframes #{$animation-name} {
    @content;
  }

  @-ms-keyframes #{$animation-name} {
    @content;
  }

  @-o-keyframes #{$animation-name} {
    @content;
  }

  @keyframes #{$animation-name} {
    @content;
  }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};
}

@mixin colored($color) {
  @if map-has-key($tw-colors, $color) {
    $colorValues: map-get($tw-colors, $color);

    $theme: map-get($colorValues, light);

    $border: map-get($theme, border);
    $background: map-get($theme, back-ground);
    $fill: map-get($theme, fill);
    $text: map-get($theme, text);

    @apply #{$border $background/80 $fill $text};
    --clr-bg: #{$background};
    --clr-text: #{$text};

    html.dark & {
      $theme: map-get($colorValues, dark);

      $border: map-get($theme, border);
      $background: map-get($theme, back-ground);
      $fill: map-get($theme, fill);
      $text: map-get($theme, text);

      @apply #{$border $background/80 $fill $text};
      --clr-bg: #{$background};
      --clr-text: #{$text};
    }
  } @else {
    $colorValues: map-get($tw-colors, shade);

    $theme: map-get($colorValues, light);

    $border: map-get($theme, border);
    $background: map-get($theme, back-ground);
    $fill: map-get($theme, fill);
    $text: map-get($theme, text);

    @apply #{$border $background/80 $fill $text};
    --clr-bg: #{$background};
    --clr-text: #{$text};

    html.dark & {
      $theme: map-get($colorValues, dark);

      $border: map-get($theme, border);
      $background: map-get($theme, back-ground);
      $fill: map-get($theme, fill);
      $text: map-get($theme, text);

      @apply #{$border $background/80 $fill $text};
      --clr-bg: #{$background};
      --clr-text: #{$text};
    }
  }
}

@mixin underlined($width: 0.05rem, $style: solid) {
  text-decoration-line: underline;
  text-decoration-style: $style;
  text-decoration-thickness: $width;
}
