@use 'colors' as *;
@use 'breakpoints' as *;
@use 'functions' as *;

@mixin mq($key) {
  $size: map-get($breakpoints, $key);

  @media only screen and (min-width: $size) {
    @content;
  }
}

@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }

  @-moz-keyframes #{$animation-name} {
    @content;
  }

  @-ms-keyframes #{$animation-name} {
    @content;
  }

  @-o-keyframes #{$animation-name} {
    @content;
  }

  @keyframes #{$animation-name} {
    @content;
  }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};
}

@mixin colored($color) {
  $colorValues: get-colors($color);

  $theme: map-get($colorValues, light);

  color: theme(map-get($theme, text));
  fill: theme(map-get($theme, fill));
  border-color: theme(map-get($theme, border));
  background-color: theme(map-get($theme, bg) / 80%);

  --text-base-color: #{theme(map-get($theme, text))};
  --fill-base-color: #{theme(map-get($theme, fill))};
  --border-base-color: #{theme(map-get($theme, border))};
  --background-base-color: #{theme(map-get($theme, bg) / 80%)};

  html.dark & {
    $theme: map-get($colorValues, dark);

    --text-base-color: #{theme(map-get($theme, text))};
    --fill-base-color: #{theme(map-get($theme, fill))};
    --border-base-color: #{theme(map-get($theme, border))};
    --background-base-color: #{theme(map-get($theme, bg) / 70%)};

    color: theme(map-get($theme, text));
    fill: theme(map-get($theme, fill));
    border-color: theme(map-get($theme, border));
    background-color: theme(map-get($theme, bg) / 70%);
  }
}

@mixin generate-all-data-colors($mixin: colored) {
  @each $key in $color-keys {
    &[data-color='#{$key}'] {
      @include colored($key);
    }
  }
}

@mixin button-colored($color) {
  $colorValues: get-colors($color);

  $theme: map-get($colorValues, light);

  --background-base-color: #{theme(map-get($theme, bg))};
  --border-base-color: #{theme(map-get($theme, border) / 10%)};
  --fill-base-color: #{theme(map-get($theme, fill))};
  --text-base-color: #{theme(map-get($theme, text))};
}

@mixin generate-all-button-colored() {
  @each $key in $color-keys {
    &[data-color='#{$key}'] {
      @include button-colored($key);
    }
  }
}

@mixin underlined($width: 0.05rem, $style: solid) {
  text-decoration-line: underline;
  text-decoration-style: $style;
  text-decoration-thickness: $width;
}
