@use 'breakpoints' as *;

@mixin mq($key) {
  $size: map-get($breakpoints, $key);

  @media only screen and (min-width: $size) {
    @content;
  }
}

@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }

  @-moz-keyframes #{$animation-name} {
    @content;
  }

  @-ms-keyframes #{$animation-name} {
    @content;
  }

  @-o-keyframes #{$animation-name} {
    @content;
  }

  @keyframes #{$animation-name} {
    @content;
  }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};
}

// $tw-colors: (
//   primary: (
//     light: (
//       border: border-gray-500,
//       bg: bg-gray-950/80,
//       fill: fill-gray-100,
//       text: text-gray-100,
//     ),
//     dark: (
//       border: border-gray-50,
//       bg: bg-gray-100/80,
//       fill: fill-gray-950,
//       text: text-gray-950,
//     ),
//   ),
//   brand: (
//     light: (
//       border: border-brand-700,
//       bg: bg-brand-800/80,
//       fill: fill-brand-100,
//       text: text-gray-100,
//     ),
//     dark: (
//       border: border-brand-500,
//       bg: bg-brand-600/80,
//       fill: fill-brand-50,
//       text: text-gray-50,
//     ),
//   ),
//   // accent: (
//   //   bg: accent-700/80,
//   //   text: gray-100,
//   // ),
//   // red: (
//   //   bg: red-700/80,
//   //   text: gray-100,
//   // ),
//   // orange: (
//   //   bg: orange-700/80,
//   //   text: gray-100,
//   // ),
//   amber:
//     (
//       light: (
//         border: border-amber-700,
//         bg: bg-amber-800/80,
//         fill: fill-amber-100,
//         text: text-amber-100,
//       ),
//       dark: (
//         border: border-amber-500,
//         bg: bg-amber-600/80,
//         fill: fill-amber-50,
//         text: text-amber-50,
//       ),
//     ),
//   // yellow: (
//   //   bg: yellow-700/80,
//   //   text: gray-100,
//   // ),
//   // lime: (
//   //   bg: lime-700/80,
//   //   text: gray-100,
//   // ),
//   // green: (
//   //   bg: green-700/80,
//   //   text: gray-100,
//   // ),
//   // esmerald: (
//   //   bg: emerald-700/80,
//   //   text: gray-100,
//   // ),
//   // teal: (
//   //   bg: teal-700/80,
//   //   text: gray-100,
//   // ),
//   // cyan: (
//   //   bg: cyan-700/80,
//   //   text: gray-100,
//   // ),
//   sky:
//     (
//       light: (
//         border: border-sky-700,
//         bg: bg-sky-800/80,
//         fill: fill-sky-100,
//         text: text-sky-100,
//       ),
//       dark: (
//         border: border-sky-500,
//         bg: bg-sky-600/80,
//         fill: fill-sky-50,
//         text: text-sky-50,
//       ),
//     ),
//   // blue: (
//   //   bg: blue-700/80,
//   //   text: gray-100,
//   // ),
//   // indigo: (
//   //   bg: indigo-700/80,
//   //   text: gray-100,
//   // ),
//   // violet: (
//   //   bg: violet-700/80,
//   //   text: gray-100,
//   // ),
//   // purple: (
//   //   bg: purple-700/80,
//   //   text: gray-100,
//   // ),
//   // fuchsia: (
//   //   bg: fuchsia-700/80,
//   //   text: gray-100,
//   // ),
//   // pink: (
//   //   bg: pink-700/80,
//   //   text: gray-100,
//   // ),
//   // rose: (
//   //   bg: rose-700/80,
//   //   text: gray-100,
//   // ),
// );

$color-keys: (
  brand,
  accent,
  shade,
  elite,
  pro,
  prime,
  red,
  orange,
  amber,
  yellow,
  lime,
  green,
  emerald,
  teal,
  cyan,
  sky,
  blue,
  indigo,
  violet,
  purple,
  fuchsia,
  pink,
  rose
);

$tw-colors: ();

@each $key in $color-keys {
  $new-colors: (
    $key: (
      light: (
        border: #{'border-' + $key + '-700'},
        back-ground: #{'bg-' + $key + '-800/80'},
        fill: #{'fill-' + $key + '-100'},
        text: #{'text-' + $key + '-100'},
      ),
      dark: (
        border: #{'border-' + $key + '-500'},
        back-ground: #{'bg-' + $key + '-600/80'},
        fill: #{'fill-' + $key + '-50'},
        text: #{'text-' + $key + '-50'},
      ),
    ),
  );

  $tw-colors: map-merge($tw-colors, $new-colors);
}

$special-colors: (
  elite: (
    light: (
      border: border-gray-300,
      back-ground: bg-gray-950/90,
      fill: fill-gray-100,
      text: text-gray-100,
    ),
    dark: (
      border: border-gray-400,
      back-ground: bg-gray-800/90,
      fill: fill-gray-50,
      text: text-gray-50,
    ),
  ),
  pro: (
    light: (
      border: border-pro-300,
      back-ground: bg-pro-950/90,
      fill: fill-pro-200,
      text: text-pro-200,
    ),
    dark: (
      border: border-pro-400,
      back-ground: bg-pro-800/90,
      fill: fill-pro-100,
      text: text-pro-100,
    ),
  ),
  prime: (
    light: (
      border: border-prime-500,
      back-ground: bg-prime-950/90,
      fill: fill-prime-200,
      text: text-prime-200,
    ),
    dark: (
      border: border-prime-400,
      back-ground: bg-prime-800/90,
      fill: fill-prime-100,
      text: text-prime-100,
    ),
  ),
);

$tw-colors: map-merge($tw-colors, $special-colors);

@mixin colored($color) {
  @if map-has-key($tw-colors, $color) {
    $colorValues: map-get($tw-colors, $color);

    $theme: map-get($colorValues, light);

    $border: map-get($theme, border);
    $background: map-get($theme, back-ground);
    $fill: map-get($theme, fill);
    $text: map-get($theme, text);

    @apply #{$border $background $fill $text};

    html.dark & {
      $theme: map-get($colorValues, dark);

      $border: map-get($theme, border);
      $background: map-get($theme, back-ground);
      $fill: map-get($theme, fill);
      $text: map-get($theme, text);

      @apply #{$border $background $fill $text};
    }
  } @else {
    @apply border-slate-700 bg-slate-800/80 fill-slate-100 text-slate-100;

    html.dark & {
      @apply border-slate-500 bg-slate-600/80 fill-slate-50 text-slate-50;
    }
  }
}
